openapi: 3.0.0

info:
  title: Sample API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 0.1.9

servers:
  - url: /api

paths:
  /ping:
    get:
      summary: Check service connectivity.
      operationId: app.views.ping.ping
      responses:
        '200':
          description: Ping successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  pong:
                    type: string
                    example: OK
  /login:
    get:
      tags:
        - Auth
      summary: Login user. Retrieve JWT token in Authorization headers.
      operationId: app.views.auth.login
      security:
        - basicAuth: []
      responses:
        '200':
          description: 'Login successful.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: User not authenticated.

  /users:
    post:
      tags:
        - Auth
      summary: Create new user (if logged in user is superpowered). Retrieve JWT token for new user in Authorization headers.
      operationId: app.views.auth.create_user
      security:
        - basicAuth: []
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: user_data
              type: object
              properties:
                username:
                  type: string
                  example: test
                password:
                  type: string
                  example: 'sup3r$4f3'
                display_name:
                  type: string
                  example: Test User
              required:
                - username
                - password
      responses:
        '200':
          description: User created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: User not authenticated.
        '403':
          description: User not allowed to create another user.

  /rate_your_date/questionnaire:
    get:
      tags:
        - Rate your day
      summary: Retrieve 3 questions for daily questionnaire
      operationId: app.views.rate_your_day.questionnaire
      security:
        - jwtAuth: []
      responses:
        '200':
          description: List of questions
        '401':
          description: User not authenticated.
  /rate_your_date/rating:
    get:
      tags:
        - Rate your day
      summary: Retrieve user ratings
      operationId: app.views.rate_your_day.user_ratings
      security:
        - jwtAuth: []
      responses:
        '200':
          description: 'List of user ratings'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DailyRating'
        '401':
          description: User not authenticated.
        '403':
          description: User not allowed to use ratings.
    post:
      tags:
        - Rate your day
      summary: Create rating for today
      operationId: app.views.rate_your_day.create_rating
      security:
        - jwtAuth: []
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: rating_data
              type: object
              properties:
                general:
                  type: number
                  example: 1
                questionnaire:
                  type: number
                  example: 3
      responses:
        '200':
          description: 'Rating created successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyRating'
        '401':
          description: User not authenticated.
        '403':
          description: User not allowed to use ratings.

  /fitbit/profile:
    get:
      summary: Login user with Fitbit. You must provide an Authorization Bearer token.
      operationId: app.views.fitbit_wrapper.profile
      responses:
        '200':
          description: 'Login successful.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '403':
          description: User not authorized.

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      x-basicInfoFunc: app.views.auth.basic_auth
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: app.views.auth.jwt_auth

  schemas:
    User:
      type: object
      properties:
        username:
          type: string
          example: test_user
        display_name:
          type: string
          example: Test User
        last_login_time:
          type: string
          example: 2020-03-29T15:32:13Z
    DailyRating:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user:
          type: string
          example: test_user
        questionnaire_score:
          type: integer
          example: 3
        general_score:
          type: integer
          example: 1
